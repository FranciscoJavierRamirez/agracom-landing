---
// Agracom Internacional S.A. - Header Component
// Navegación principal con logo, menú y cambio de idioma

import type { Locale } from '../../types/global';
import { createTranslator, getAlternateLocale, getLocalizedURL } from '../../utils/i18n';

export interface Props {
  currentLang: Locale;
  currentRegion?: string;
  transparent?: boolean;
  class?: string;
}

const { 
  currentLang, 
  currentRegion, 
  transparent = false,
  class: className = ''
} = Astro.props;

// Load translations
const { common } = await createTranslator(currentLang);

// Navigation items with dynamic IDs based on language
const navigation = [
  { 
    key: 'products', 
    href: currentLang === 'es' ? '#productos' : '#products' 
  },
  { 
    key: 'certifications', 
    href: currentLang === 'es' ? '#certificaciones' : '#certifications' 
  },
  { 
    key: 'regions', 
    href: currentLang === 'es' ? '#regiones' : '#regions' 
  },
  { 
    key: 'contact', 
    href: currentLang === 'es' ? '#contacto' : '#contact' 
  }
];

// Get alternate language URL
const alternateLocale = getAlternateLocale(currentLang);
const alternateURL = currentLang === 'es' ? '/en' : '/';

// Dynamic tagline based on language
const tagline = currentLang === 'es' 
  ? 'Lupinos y Cerezas Premium desde Chile'
  : 'Premium Lupins and Cherries from Chile';
---

<header 
  class={`sticky top-0 z-50 transition-all duration-300 ${
    transparent 
      ? 'bg-white/90 backdrop-blur-md shadow-sm' 
      : 'bg-white shadow-md'
  } ${className}`}
  role="banner"
>
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between py-4">
      
      <!-- Logo and Brand -->
      <div class="flex items-center space-x-4 group">
        <a 
          href={getLocalizedURL('/', currentLang)}
          class="flex items-center space-x-3 focus:outline-none focus:ring-2 focus:ring-accent rounded-lg p-1"
          aria-label={`${currentLang === 'es' ? 'Ir al inicio' : 'Go to homepage'}`}
        >
          <!-- AgraCom Official Logo -->
          <div class="w-16 h-16 sm:w-20 sm:h-20 flex items-center justify-center group-hover:scale-105 transition-transform">
            <img 
              src="/images/agracom-logo.svg" 
              alt="AgraCom Internacional Logo" 
              class="w-full h-full object-contain"
              loading="eager"
            />
          </div>
          
          <!-- Brand Text -->
          <div class="hidden sm:block">
            <h1 class="text-2xl font-bold text-neutral-900 group-hover:text-primary transition-colors">
              Agracom Internacional
            </h1>
            <p class="text-base text-neutral-600 leading-tight">
              {tagline}
            </p>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden lg:flex items-center space-x-8" role="navigation" aria-label="Main navigation">
        {navigation.map(async (item) => {
          const label = await common(`navigation.${item.key}`);
          return (
            <a
              href={item.href}
              class="text-neutral-700 hover:text-primary font-medium transition-colors duration-200 relative group py-2"
            >
              {label}
              <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-primary transition-all duration-300 group-hover:w-full"></span>
            </a>
          );
        })}
      </nav>

      <!-- Right Section: Language Switcher + Mobile Menu -->
      <div class="flex items-center space-x-4">
        
        <!-- Language Switcher -->
        <div class="flex items-center space-x-2 bg-neutral-100 rounded-lg p-1">
          <a 
            href={currentLang === 'es' ? '/' : '/'}
            class={`px-3 py-1 rounded-md text-sm font-semibold transition-all ${
              currentLang === 'es' 
                ? 'bg-primary text-white shadow-sm' 
                : 'text-neutral-600 hover:text-primary'
            }`}
            hreflang="es"
            aria-label={`${currentLang === 'es' ? 'Página en español (actual)' : 'Cambiar a español'}`}
          >
            ES
          </a>
          <span class="text-neutral-400">|</span>
          <a 
            href={alternateURL}
            class={`px-3 py-1 rounded-md text-sm font-semibold transition-all ${
              currentLang === 'en' 
                ? 'bg-primary text-white shadow-sm' 
                : 'text-neutral-600 hover:text-primary'
            }`}
            hreflang={alternateLocale}
            aria-label={`${currentLang === 'es' ? 'Cambiar a inglés' : 'Switch to Spanish'}`}
          >
            EN
          </a>
        </div>

        <!-- CTA Button (Hidden on small screens) -->
        <a 
          href={currentLang === 'es' ? '#contacto' : '#contact'}
          class="hidden md:inline-flex btn btn-primary px-6 py-2"
        >
          {await common('cta.inquire')}
        </a>

        <!-- Mobile Menu Button -->
        <button
          type="button"
          class="lg:hidden p-2 text-neutral-700 hover:text-primary focus:outline-none focus:ring-2 focus:ring-accent rounded-lg"
          aria-label={currentLang === 'es' ? 'Abrir menú' : 'Open menu'}
          data-mobile-menu-trigger
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu (Hidden by default) -->
    <div 
      class="lg:hidden hidden bg-white border-t border-neutral-200 py-4"
      data-mobile-menu
      role="navigation"
      aria-label="Mobile navigation"
    >
      <div class="flex flex-col space-y-4">
        {navigation.map(async (item) => {
          const label = await common(`navigation.${item.key}`);
          return (
            <a
              href={item.href}
              class="text-neutral-700 hover:text-primary font-medium py-2 px-4 rounded-lg hover:bg-neutral-50 transition-colors"
              data-mobile-menu-item
            >
              {label}
            </a>
          );
        })}
        
        <!-- Mobile CTA -->
        <div class="pt-4 border-t border-neutral-200">
          <a 
            href={currentLang === 'es' ? '#contacto' : '#contact'}
            class="btn btn-primary w-full text-center py-3"
          >
            {await common('cta.inquire')}
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Region Indicator (if region is set) -->
  {currentRegion && (
    <div class="bg-accent/10 border-b border-accent/20">
      <div class="container mx-auto px-4 py-2">
        <p class="text-sm text-accent-dark text-center">
          <span class="font-medium">
            {currentLang === 'es' ? 'Región seleccionada:' : 'Selected region:'} 
          </span>
          {currentRegion === 'us-east' && (currentLang === 'es' ? 'Costa Este EE.UU.' : 'US East Coast')}
          {currentRegion === 'mediterranean' && (currentLang === 'es' ? 'Mediterráneo' : 'Mediterranean')}
          {currentRegion === 'middle-east' && (currentLang === 'es' ? 'Medio Oriente' : 'Middle East')}
        </p>
      </div>
    </div>
  )}
</header>

<!-- Mobile Menu JavaScript -->
<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const menuTrigger = document.querySelector('[data-mobile-menu-trigger]');
    const mobileMenu = document.querySelector('[data-mobile-menu]');
    const menuItems = document.querySelectorAll('[data-mobile-menu-item]');
    
    if (menuTrigger && mobileMenu) {
      // Toggle mobile menu
      menuTrigger.addEventListener('click', function() {
        const isHidden = mobileMenu.classList.contains('hidden');
        
        if (isHidden) {
          mobileMenu.classList.remove('hidden');
          menuTrigger.setAttribute('aria-expanded', 'true');
          // Change icon to X
          menuTrigger.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          `;
        } else {
          mobileMenu.classList.add('hidden');
          menuTrigger.setAttribute('aria-expanded', 'false');
          // Change icon back to hamburger
          menuTrigger.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          `;
        }
      });
      
      // Close menu when clicking on menu items
      menuItems.forEach(item => {
        item.addEventListener('click', function() {
          mobileMenu.classList.add('hidden');
          menuTrigger.setAttribute('aria-expanded', 'false');
          menuTrigger.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          `;
        });
      });
      
      // Close menu on ESC key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.add('hidden');
          menuTrigger.setAttribute('aria-expanded', 'false');
          (menuTrigger as HTMLElement).focus();
        }
      });
    }
  });
  
  // Smooth scrolling for anchor links
  document.addEventListener('DOMContentLoaded', function() {
    const anchorLinks = document.querySelectorAll('a[href^="#"]');
    
    anchorLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        const targetId = (e.target as HTMLAnchorElement).getAttribute('href');
        const targetElement = targetId ? document.querySelector(targetId) : null;
        
        if (targetElement) {
          e.preventDefault();
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
  });
</script>

<style>
  /* Header scroll effect */
  header {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Logo hover effect */
  .group:hover .w-12 {
    transform: scale(1.05);
  }
  
  /* Navigation underline animation */
  nav a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-primary);
    transition: width 0.3s ease;
  }
  
  nav a:hover::after {
    width: 100%;
  }
  
  /* Mobile menu animation */
  [data-mobile-menu] {
    animation: slideDown 0.3s ease-out;
  }
  
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Ensure proper stacking context */
  header {
    will-change: transform;
  }
  
  /* Focus styles for accessibility */
  button:focus,
  a:focus {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }
</style>